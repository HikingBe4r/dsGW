<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.groupware.persistent.mapper.DocumentMapper">

	<insert id="insertDocument" parameterType="documentVO" statementType="PREPARED" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		<!-- <selectKey keyProperty="status" statementType="PREPARED" order="BEFORE" resultType="string">
			SELECT id 
			FROM DOCUMENT_STATUS
			WHERE status = #{status}	
		</selectKey> -->
		INSERT INTO DOCUMENT (form_id, subject, content, writeday, enddate, document_status_id )
		VALUES (#{formVO.id}, #{subject}, #{content}, sysdate, to_date(#{endDate}, 'YYYY/MM/DD HH24:MI:SS'), #{status} )		
	</insert>


	<update id="updateDocumentStatus" parameterType="documentVO" statementType="PREPARED">
		UPDATE DOCUMENT
		SET DOCUMENT_STATUS_ID = #{status}
		WHERE ID = #{id}
	</update>
	
	
	<!--
		t1: 본인의 emp_id로 approval_line을 찾는다.
		t2: t1의 approval_line이 같은 approver 중 auth_id = 1(기안) 인 approver_id를 찾는다.
		t3: approval_history에서 approver_id가 t2의 결과와 같은 값의 document_id를 가진 문서의 정보를 select 한다.
		t4: t3의 결과물을 parameter인 hashmap에 맞게 검색한다. 
	 -->
	<select id="selectApprovalDocumentList" resultType="java.util.HashMap" parameterType="java.util.HashMap" statementType="PREPARED">  
		SELECT 
			doc.id, 
			doc.subject, 
			t2.name, 
			TO_CHAR(doc.writeday, 'YYYY/MM/DD HH24:MI:SS') WRITEDAY, 
			TO_CHAR(doc.enddate, 'YYYY/MM/DD HH24:MI:SS') ENDDATE, 
			docstat.status,
		    t2.firstappid,
		    t2.myappid  
		FROM 
			document_status docstat, document doc, approval_history apphis,
			(SELECT app.id firstAppId, emp.name, t1.myappid
			 FROM approver app, employee emp, 
			 	(SELECT app.approval_line_id, app.id myAppId
			 	FROM approver app, employee emp
			 	WHERE emp.id = app.employee_id
			 	<if test="boardId == 1 or boardId == 3">	<!-- 1: 결재문서, 3: 미완료문서 -->
			 		AND app.approval_auth_id = 2
			 	</if>
			 	<if test="boardId == 2">					<!-- 2: 수신문서 -->
			 		AND app.approval_auth_id = 3
			 	</if>
			 	<if test="boardId == 4">					<!-- 4: 기안문서 -->	
			 		AND app.approval_auth_id = 1
			 	</if>
			 	
			 	  AND emp.id = #{employeeId}) t1						<!-- 본인 empId -->
			 WHERE app.approval_line_id = t1.approval_line_id
			   AND   app.approval_auth_id = 1
			   AND   app.employee_id = emp.id) t2
		WHERE apphis.approver_id = t2.firstappid
	 	  AND apphis.document_id = doc.id
		  AND doc.document_status_id = docstat.id
		  AND doc.document_status_id not in (3,4,5)
		  
		 <if test="keyword != null and keytype != null">
			<if test="keytype.equals('전체')">
				AND (doc.subject like '%' ||#{keyword}|| '%'
				OR t2.name like '%' ||#{keyword}|| '%')
			</if>
		
			<if test="keytype.equals('제목')">
				AND doc.subject like '%' ||#{keyword}|| '%'
			</if>
		
			<if test="keytype.equals('작성자')">
				AND t2.name like '%' ||#{keyword}|| '%'
			</if>
		</if>
		ORDER BY doc.id DESC
	</select>
	
	<resultMap type="documentVO" id="selectApprovalDocumentMap" autoMapping="true">
		<id property="id" column="documentId" />
		<result property="subject" column="docSubject" />
		<result property="content" column="content" />
		<result property="writeday" column="writeday" />
		<result property="endDate" column="enddate" />
		<result property="status" column="docStatus" />		
		<association property="formVO" javaType="formVO">
			<id property="id" column="formId" />
			<result property="subject" column="formSubject"/>
		</association>
		<collection property="documentFileList" javaType="documentFileVO">
			<id property="id" column="docFileId"/>
			<result property="originalFileName" column="original_file_name"/>
		</collection>
	</resultMap>
	
	<select id="selectApprovalDocument" resultMap="selectApprovalDocumentMap" parameterType="String" statementType="PREPARED">  
		SELECT 
			doc.id documentId, 
			doc.subject docSubject, 
			doc.content, 
			TO_CHAR(doc.writeday, 'YYYY/MM/DD HH24:MI:SS') writeday, 
			TO_CHAR(doc.enddate, 'YYYY/MM/DD HH24:MI:SS') enddate,
			doc.document_status_id docStatus,
			form.id formId, 
			form.subject formSubject, 
			docFile.id docFileId,
			docFile.system_file_name
		FROM document doc, form, document_file docFile
		WHERE doc.id = #{documentId}
		  AND doc.form_id = form.id(+)
		  AND doc.id = docfile.document_id(+)
	</select>
	
	
	<select id="selectDocumentList" resultType="documentVO" statementType="PREPARED" parameterType="map">		
		select 
			doc.id,
			doc.subject,
			doc.writeday,
			(select max(auth_date) from approval_history ah where ah.document_id = doc.id) as endDate,
			emp.name as writer,
			ds.status
		from
		<if test="myDocs == 1">
			mydocs md,
		</if>
		<if test="status == 5">
			approval_auth aa,
		</if>
			document doc,
		    document_status ds,
		    approval_history ah,
		    approver ap,
		    employee emp		        
		where
			doc.document_status_id = ds.id
				and doc.id = ah.document_id
				and ah.approver_id = ap.id
				and ap.employee_id = emp.id				
				<if test="myDocs == 1">
					and ap.step = 1
					and doc.id = md.document_id
					and md.employee_id = #{employeeId}
				</if>
				<if test="myDocs == 2 and status != 5">
					and ap.step = 1
					and ds.id = #{status}
				</if>
				<if test="myDocs == 2 and status == 5">
					and ap.approval_auth_id = aa.id
          			and ap.step = 0
          			and ap.employee_id = #{employeeId}
				</if>
				<!-- <if test="keyword != 'all'"> -->
					<if test="keyfield == 'subject'">
						and doc.subject like '%' || #{keyword} || '%'
					</if>
					<if test="keyfield == 'writer'">
						and emp.name like '%' || #{keyword} || '%'
					</if>
					<if test="searchDay == 'writeDay'">
						<if test="startDay != 'all' and endDay != 'all'">
							and to_char(doc.writeday, 'YYYY/MM/DD') between #{startDay} and #{endDay}
						</if>
						<if test="startDay != 'all' and endDay == 'all'">
							and to_char(doc.writeday, 'YYYY/MM/DD') = #{startDay}
						</if>
						<if test="startDay == 'all' and endDay != 'all'">
							and to_char(doc.writeday, 'YYYY/MM/DD') = #{endDay}
						</if>
					</if>
					<if test="searchDay == 'finishDay'">
						<if test="startDay != 'all' and endDay != 'all'">
							and to_char((select max(auth_date) from approval_history ah where ah.document_id = doc.id), 'YYYY/MM/DD') between #{startDay} and #{endDay}
						</if>
						<if test="startDay != 'all' and endDay == 'all'">
							and to_char((select max(auth_date) from approval_history ah where ah.document_id = doc.id), 'YYYY/MM/DD') = #{startDay}
						</if>
						<if test="startDay == 'all' and endDay != 'all'">
							and to_char((select max(auth_date) from approval_history ah where ah.document_id = doc.id), 'YYYY/MM/DD') = #{endDay}
						</if>
					</if>
					<!-- <if test="searchDay == 'all'">
						
					</if> -->
				<!-- </if> -->
		order by writeday desc
	</select>
	
	<insert id="insertBookMarkDocument" parameterType="bookMarkDocumentVO" statementType="PREPARED">
		<selectKey keyProperty="id" statementType="STATEMENT" order="BEFORE" resultType="int">
			select mydocs_id_seq.nextval from dual
		</selectKey>
		
		insert into mydocs (id, employee_id, document_id)
		values (#{id}, #{employeeId}, #{documentId})
	</insert>
	
	<delete id="deleteBookMarkDocument" parameterType="int" statementType="PREPARED">
		delete from mydocs
		where id = #{value}
	</delete>
	
</mapper>